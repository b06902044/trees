{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","App","props","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","setState","console","log","state","className","this","onClick","signOut","currentUser","displayName","alt","src","photoURL","firebaseAuth","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAMAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,gC,IAoDCC,E,kDAhDb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAIRC,SAAW,CACTC,WAAY,QACZC,cAAe,CACbR,IAASS,KAAKC,mBAAmBC,YACjCX,IAASS,KAAKG,qBAAqBD,YACnCX,IAASS,KAAKI,kBAAkBF,aAElCG,UAAW,CACTC,cAAe,kBAAM,KAbP,EAiBlBC,kBAAoB,WAClBhB,IAASS,OAAOQ,oBAAmB,SAAAC,GACjC,EAAKC,SAAS,CAACV,OAAQS,IACvBE,QAAQC,IAAI,OAAQH,OAlBtB,EAAKI,MAAQ,CAACb,MAAM,GAFJ,E,qDAyBhB,OACE,qBAAKc,UAAU,MAAf,SACGC,KAAKF,MAAMb,KACV,iCACE,wBAAQgB,QAAS,kBAAMzB,IAASS,OAAOiB,WAAvC,uBACA,0CAAa1B,IAASS,OAAOkB,YAAYC,eACzC,qBACEC,IAAI,kBACJC,IAAK9B,IAASS,OAAOkB,YAAYI,cAIrC,cAAC,IAAD,CACEzB,SAAUkB,KAAKlB,SACf0B,aAAchC,IAASS,e,GAxCjBwB,IAAMC,WCCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.959d5e02.chunk.js","sourcesContent":["import React, { Component, useState , useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBDwcbLqFnlmWZEsF9B1HqFgYeW_5a-ft0\",\n  authDomain: \"trees-96888.firebaseapp.com\"\n})\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {auth: false};\n  }\n\n  uiConfig = {\n    signInFlow: \"popup\",\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      signInSuccess: () => false\n    }\n  }\n\n  componentDidMount = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      this.setState({auth: !!user});\n      console.log(\"user\", user);\n    })\n  }\n  \n  render(){\n    return(\n      <div className=\"App\">\n        {this.state.auth ? (\n          <span>\n            <button onClick={() => firebase.auth().signOut()}>Sign out!</button>\n            <h1>Welcome {firebase.auth().currentUser.displayName}</h1>\n            <img\n              alt=\"profile picture\"\n              src={firebase.auth().currentUser.photoURL}\n            />\n          </span>\n        ) : (\n          <StyledFirebaseAuth\n            uiConfig={this.uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        )}\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}